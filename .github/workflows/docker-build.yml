# .github/workflows/docker-build.yml

name: Build, Test, and Deploy Results

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

# Add permissions for the job to write to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up Java
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # 3. Run 'mvn test'
      - name: Run tests and generate reports
        run: mvn test

      # 4. --- THIS IS THE UPGRADED STEP ---
      #    This creates a styled index.html page
      - name: Generate Stylish Test Report index.html
        run: |
          # Start the HTML file with a <style> block for a modern look
          echo '<!DOCTYPE html>' > target/surefire-reports/index.html
          echo '<html lang="en"><head><meta charset="UTF-8">' >> target/surefire-reports/index.html
          echo '<meta name="viewport" content="width=device-width, initial-scale=1.0">' >> target/surefire-reports/index.html
          echo '<title>Test Reports</title><style>' >> target/surefire-reports/index.html
          echo 'body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; display: flex; justify-content: center; align-items: center; min-height: 90vh; background-color: #f6f8fa; color: #24292e; margin: 0; }' >> target/surefire-reports/index.html
          echo '.container { text-align: center; background-color: #fff; padding: 40px; border-radius: 10px; box-shadow: 0 4px 12px rgba(0,0,0,0.05); max-width: 600px; width: 90%; }' >> target/surefire-reports/index.html
          echo 'h1 { color: #24292e; margin-bottom: 24px; }' >> target/surefire-reports/index.html
          echo 'ul { list-style-type: none; padding: 0; margin: 0; }' >> target/surefire-reports/index.html
          echo 'li { margin: 12px 0; }' >> target/surefire-reports/index.html
          echo 'a { text-decoration: none; color: #0366d6; font-size: 1.1em; font-weight: 500; display: block; padding: 12px; border: 1px solid #ddd; border-radius: 6px; transition: all 0.2s ease-in-out; }' >> target/surefire-reports/index.html
          echo 'a:hover { background-color: #f6f8fa; border-color: #0366d6; }' >> target/surefire-reports/index.html
          echo '</style></head><body>' >> target/surefire-reports/index.html
          
          # Add the content
          echo '<div class="container">' >> target/surefire-reports/index.html
          echo '<h1>Test Run Results</h1>' >> target/surefire-reports/index.html
          echo '<ul>' >> target/surefire-reports/index.html
          
          # Loop through files and create list items
          for file in target/surefire-reports/*; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              # Skip the index.html file itself
              if [ "$filename" != "index.html" ]; then
                echo "<li><a href=\"$filename\">$filename</a></li>" >> target/surefire-reports/index.html
              fi
            fi
          done
          
          # Close tags
          echo '</ul></div></body></html>' >> target/surefire-reports/index.html

      # 5. Upload the test reports folder (which now includes index.html)
      - name: Upload test reports
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'target/surefire-reports'

      # 6. Also build the Docker image to prove it works
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: message-router:latest

      # 7. Deploy the uploaded reports to GitHub Pages
      - name: Deploy test results to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4